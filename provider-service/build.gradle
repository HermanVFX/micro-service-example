apply plugin: "org.openapi.generator"
apply plugin: "com.google.protobuf"

repositories {
	mavenCentral()
}

ext {
	protobuf_version = '3.21.2'
	grpc_version = '1.47.0'
	grpc_server_version = '2.13.1.RELEASE'
}

dependencies {
	implementation dep.swagger
	implementation dep.springWeb
	implementation dep.utils
	implementation dep.springDataCommons
	implementation dep.springOpenFeignCore

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation "io.grpc:grpc-netty:${grpc_version}"
	implementation("net.devh:grpc-server-spring-boot-starter:${grpc_server_version}") {
		exclude group: 'io.grpc', module: 'grpc-netty-shaded'
	}

}

sourceSets {
	main {
		java {
			srcDir("$buildDir/generated/api/src/main/java")
		}
	}
}


tasks.compileJava {
	dependsOn(tasks.openApiGenerate)
}

openApiGenerate {
	inputSpec = "$project.rootDir/provider-service/src/main/resources/openapi/api-docs.yml".toString()
	outputDir = "$buildDir/generated/api" as Object
	generateModelDocumentation = true
	generatorName = "spring"
	library = "spring-boot"
	apiPackage = "com.example.providerservice.controller"
	modelPackage = "com.example.providerservice.dto"
	invokerPackage = "com.example.providerservice.api"
	configOptions = [
			useSpringBoot3: "true",
			useTags: "true",
			java8: "false",
			dateLibrary: "java8",
			interfaceOnly: "true",
			skipDefaultInterface: "true",
			hideGenerationTimestamp: "true",
			serializableModel: "true",
			booleanGetterPrefix: "is",
			openApiNullable: "true",
	]
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:${protobuf_version}"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {}
		}
	}
}